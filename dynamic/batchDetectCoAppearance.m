% batchDetectCoAppearance.m
% 
% Small wrapper script that gets folder and channel information for several
% experiments and then runs detectCoAppearance.m in batch mode.  This is
% best suited for processing several datasets from the same experiment in
% parallel; if you have just a single dataset, or different channels in
% different datasets, run detectCoAppearance() directly. 

%% Set up

% Ask user for image folders
imgDir = uipickfiles('Prompt','Select directories containing image files to analyze','Type',{'Directory'});

% Options dialog box
[Answer,Cancelled] = dynamicChannelInfoDlg(imgDir{1});
if Cancelled 
    return
else
    v2struct(Answer);
    if strcmp(pixelSizeChoice,'121.9 nm    ')
        pixelSize = 121.9;
    elseif strcmp(pixelSizeChoice,'110 nm    ')
        pixelSize = 110;
    end
    DataType = 'Composite Data';  %% Data types are deprecated, set here to preserve backward compatibility
end

% Image registration
if strcmp(DataType,'Composite Data')  
    % Register composite images
    regImg = TIFFStack(regFile,[],nChannels);
    subImg = regImg(:,:,:,RegWindow1:RegWindow2);
    avgImg = mean(subImg, 4);
    for g = 1:nChannels 
        if g == baitChNum 
            continue 
        else
            regData(g) = registerImages( avgImg(:,:,g), avgImg(:,:,baitChNum) );
        end
    end
else
    % Register side-by-side dual-view images
    regImg = TIFFStack(regFile);
    subImg = regImg(:,:,RegWindow1:RegWindow2);
    avgImg = mean(subImg, 3);
    [~, xmax] = size(avgImg);
    leftImg = avgImg(:,1:(xmax/2));
    rightImg = avgImg(:,(xmax/2)+1:xmax);
    regData = registerImages(rightImg, leftImg);
end

% Loop over image directories and call detectCoAppearance on each one
statusbar = waitbar(0);
for a = 1:length(imgDir)
    waitbar((a-1)/length(imgDir),statusbar,strrep(['Analyzing Experiment ' imgDir{a}],'_','\_')); 
    d = uipickfiles_subs.filtered_dir([imgDir{a} filesep '*.tif'],'',false,@(x,c)uipickfiles_subs.file_sort(x,[1 0 0],c)); % See comments in uipickfiles_subs for syntax here
    imgFile = arrayfun(@(x) [x.folder filesep x.name], d, 'UniformOutput', false);
    % If data have been previously processed, the data files will include average and difference images generated by detectCoAppearance.m 
    % These images end with 'Img.tif' and will be excluded in the imgFile list.
    index = arrayfun(@(x) ~x.isdir && ~endsWith([x.name],'Img.tif'), d);
    imgFile = imgFile(index);
    
    detectCoAppearance(imgFile, Answer, regData);
    
end
close(statusbar)